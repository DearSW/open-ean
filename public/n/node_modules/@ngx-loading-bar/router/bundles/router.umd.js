(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@ngx-loading-bar/core')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/router', '@ngx-loading-bar/core'], factory) :
	(factory((global.router = {}),global.ng.core,global.ng.router,global['@ngx-loading-bar/core']));
}(this, (function (exports,core,router,core$1) { 'use strict';

var LoadingBarRouterModule = /** @class */ (function () {
    /**
     * @param {?} router
     * @param {?} loadingBar
     */
    function LoadingBarRouterModule(router$$1, loadingBar) {
        router$$1.events.subscribe(function (event) {
            if (event instanceof router.NavigationStart) {
                loadingBar.start();
            }
            if ((event instanceof router.NavigationError || event instanceof router.NavigationEnd || event instanceof router.NavigationCancel)) {
                loadingBar.complete();
            }
        });
    }
    return LoadingBarRouterModule;
}());
LoadingBarRouterModule.decorators = [
    { type: core.NgModule, args: [{
                imports: [
                    router.RouterModule,
                    core$1.LoadingBarModule.forRoot(),
                ],
                exports: [
                    router.RouterModule,
                    core$1.LoadingBarModule,
                ],
            },] },
];
/**
 * @nocollapse
 */
LoadingBarRouterModule.ctorParameters = function () { return [
    { type: router.Router, },
    { type: core$1.LoadingBarService, },
]; };

exports.LoadingBarRouterModule = LoadingBarRouterModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=router.umd.js.map
