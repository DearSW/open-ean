import { ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';
import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DayInterface, MonthInterface } from '../calendar/nz-calendar.component';
import { NzLocaleService } from '../locale/index';
import { NzTimePickerInnerComponent } from '../time-picker/nz-timepicker-inner.component';
export declare class NzDatePickerComponent implements ControlValueAccessor, OnInit {
    private _elementRef;
    private _cdr;
    private _locale;
    private _allowClear;
    private _disabled;
    private _showTime;
    _el: HTMLElement;
    _open: boolean;
    _mode: string;
    _dropDownPosition: string;
    _value: Date;
    _disabledDate: any;
    _today: Date;
    _selectedMonth: number;
    _selectedYear: number;
    _selectedDate: number;
    _showMonth: number;
    _showYear: number;
    _startDecade: number;
    _yearPanel: string[][];
    _positions: ConnectionPositionPair[];
    onChange: (value: Date) => void;
    onTouched: () => void;
    nzPlaceHolder: string;
    nzFormat: string;
    nzSize: string;
    nzMode: 'day' | 'month';
    trigger: any;
    timePickerInner: NzTimePickerInnerComponent;
    nzShowTime: Partial<NzTimePickerInnerComponent>;
    nzAllowClear: boolean;
    nzDisabled: boolean;
    nzDisabledDate: () => boolean;
    readonly _disabledToday: boolean;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    nzValue: Date;
    _changeTime($event: Date): void;
    _blurInput(box: HTMLInputElement): void;
    _preYear(): void;
    _nextYear(): void;
    _preMonth(): void;
    _nextMonth(): void;
    _setShowYear(year: number, $event: MouseEvent): void;
    _preDecade(): void;
    _nextDecade(): void;
    _clearValue(e: MouseEvent): void;
    _changeToToday(): void;
    _clickDay(day: DayInterface): void;
    _clickMonth(month: MonthInterface): void;
    _openCalendar(): void;
    _closeCalendar(): void;
    _changeMonthView(): void;
    _changeDecadeView($event: MouseEvent): void;
    _changeTimeView($event: MouseEvent): void;
    _changeYearView($event: MouseEvent): void;
    readonly _showClearIcon: boolean;
    _generateYearPanel(): void;
    constructor(_elementRef: ElementRef, _cdr: ChangeDetectorRef, _locale: NzLocaleService);
    ngOnInit(): void;
    writeValue(value: Date): void;
    registerOnChange(fn: (_: Date) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    private _updateValue(value);
}
